#+OPTIONS: ':nil *:t -:t ::t <:t H:3 \n:nil ^:t arch:headline
#+OPTIONS: author:t broken-links:nil c:nil creator:nil
#+OPTIONS: d:(not "LOGBOOK") date:t e:t email:nil f:t inline:t num:t
#+OPTIONS: p:nil pri:nil prop:nil stat:t tags:t tasks:t tex:t
#+OPTIONS: timestamp:t title:t toc:t todo:t |:t
#+TITLE: helm-lib-babel
#+DATE: <2018-02-25 Son>
#+AUTHOR: Derek Feichtinger
#+EMAIL: derek.feichtinger@psi.ch
#+LANGUAGE: en
#+SELECT_TAGS: export
#+EXCLUDE_TAGS: noexport

* helm-lib-babel

  [[file:http://melpa.org/packages/helm-lib-babel-badge.svg]]

  =helm-lib-babel= provides a convenient helm lookup function for
  org-mode's ability to use previously defined named source code
  blocks like functions (typically inserted via a =#+CALL:=
  statement). The available functions consist of all named functions
  found in the current file and the user's library of babel.

  [[file:babel8.gif]]

* Installation

  Install the raw package and then just use
  #+BEGIN_SRC emacs-lisp :exports source
  (require 'helm-lib-babel)
  #+END_SRC

  or better, use =use-package=

  #+BEGIN_SRC emacs-lisp :exports source
  (use-package helm-lib-babel)
  #+END_SRC  

  There are no configuration settings needed by the package. If you do not
  have an own library of babel (defined via =org-babel-lob-ingest=), then
  only the named source blocks of the file you are currently visiting
  will be offered.
  
* Motivation
  Despite having used Org mode's source code blocks for many years,
  I never had really made friends with the [[https://orgmode.org/worg/org-contrib/babel/library-of-babel.html][Library of Babel]] feature,
  which allows using source blocks defined in other org files in
  the current file.

  Among the reasons was that it is awkward to look up the remote
  source block's definition, its name and arguments. This is
  resolved by this little helm extension.

  I am making use of many table related functions in my work, and
  Over the last few years I am spending an ever increasing part
  of my work life in Emacs and Org mode. I found that there are
  a lot of source block functions which I want to re-use between files.
  While I am not a huge fan of the library of babel mechanism, for
  this number of very often used functions, it is convenient.

  One must be concious that the files that are created with library of
  babel references are no longer self-contained, because they
  reference code outside of the current org file. So, handing them to
  others is not easily possible, except if one adds the library files
  as well.

  In the end the /library of babel/ is only a very weak replacement
  for a real dynamic "library loader" feature which would allow to
  reference the used libraries within the org file. But then maybe we
  would start to overload org-mode and make it to a full
  meta-programming environment that requires library default paths,
  etc. Naturally it would be possible to put the execution of an
  =org-babel-lob-ingest= form into the file variables of the org-file,
  but that is rather hacky.



